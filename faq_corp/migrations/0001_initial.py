# Generated by Django 5.0.7 on 2025-03-24 04:32

import datetime
import django.db.models.deletion
import faq_corp.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Corp',
            fields=[
                ('corp_id', models.AutoField(primary_key=True, serialize=False)),
                ('corp_name', models.CharField(max_length=20, unique=True)),
                ('corp_address', models.TextField(blank=True, null=True)),
                ('corp_tel', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=faq_corp.models.logo_upload_path)),
                ('qr_code', models.CharField(blank=True, max_length=100, null=True)),
                ('agent_id', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Corp_BillingKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_uid', models.CharField(max_length=255, unique=True)),
                ('imp_uid', models.CharField(blank=True, max_length=255, null=True)),
                ('merchant_uid', models.CharField(blank=True, max_length=255, null=True)),
                ('plan', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subscription_cycle', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('deactivation_date', models.DateField(blank=True, null=True)),
                ('corp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='corp_billing', to='faq_corp.corp')),
            ],
        ),
        migrations.CreateModel(
            name='Corp_Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=100)),
                ('corp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='faq_corp.corp')),
            ],
            options={
                'unique_together': {('department_name', 'corp')},
            },
        ),
        migrations.CreateModel(
            name='Corp_Complaint',
            fields=[
                ('complaint_id', models.AutoField(primary_key=True, serialize=False)),
                ('complaint_number', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('birth_date', models.CharField(max_length=6)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('접수', '접수'), ('처리 중', '처리 중'), ('완료', '완료')], default='접수', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('corp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='faq_corp.corp')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='faq_corp.corp_department')),
            ],
        ),
        migrations.CreateModel(
            name='Corp_PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imp_uid', models.CharField(max_length=255)),
                ('merchant_uid', models.CharField(max_length=255, unique=True)),
                ('merchant_name', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('billing_key', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='faq_corp.corp_billingkey')),
                ('corp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corp_payment_history', to='faq_corp.corp')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Corp_Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(choices=[('BASIC', 'Basic Plan'), ('CORPORATION', 'Corporation Plan'), ('PUBLIC', 'Public Plan')], default='CORPORATION', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('next_billing_date', models.DateField(default=datetime.date(2025, 4, 24))),
                ('billing_key', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscription_billing', to='faq_corp.corp_billingkey')),
                ('corp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='corp_subscription', to='faq_corp.corp')),
            ],
        ),
        migrations.CreateModel(
            name='Corp_User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=30, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to=faq_corp.models.profile_photo_upload_path)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('marketing', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('corp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corp_users', to='faq_corp.corp')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corp_users', to='faq_corp.corp_department')),
            ],
        ),
        migrations.CreateModel(
            name='Corp_ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to=faq_corp.models.user_directory_path)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Corp_ServiceRequests', to='faq_corp.corp_user')),
            ],
        ),
    ]
